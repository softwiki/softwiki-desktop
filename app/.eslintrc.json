{
    "root": true,
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "rules": {
        "indent": [
            "error",
            "tab"
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "quotes": [
            "error",
            "double",
            {"allowTemplateLiterals": true}
        ],
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/space-infix-ops": "error",
        "@typescript-eslint/no-var-requires": "off",
        "brace-style": ["error", "stroustrup", {"allowSingleLine": true}],
        "lines-between-class-members": ["error", "always", {"exceptAfterSingleLine": true}],
        "padded-blocks": ["error", "never"],
        "no-multiple-empty-lines": ["error", {"max": 1}],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": ["property", "parameterProperty", "method", "accessor", "variable", "function", "parameter"],
                "format": ["camelCase"]
            },
            {
                "selector": ["property", "parameterProperty", "method", "accessor"],
                "format": ["camelCase"],
                "modifiers": ["private"],
                "leadingUnderscore": "require"
            }
        ]
    },
    "overrides": [
        {
            "files": ["*.ts"],
            "rules": {
                "semi": [
                    "error",
                    "always"
                ],
                "@typescript-eslint/explicit-function-return-type": "error"
            }
          },
          {
            "files": ["*.tsx"],
            "rules": {
                "@typescript-eslint/explicit-module-boundary-types": "off",
                "@typescript-eslint/no-empty-function": "off",
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": ["property", "parameterProperty", "method", "accessor", "variable", "parameter"],
                        "format": ["camelCase"]
                    },
                    {
                        "selector": ["variable"],
                        "modifiers": ["global"],
                        "format": ["PascalCase", "camelCase"]                        
                    },
                    {
                        "selector": ["property", "parameterProperty", "method", "accessor"],
                        "modifiers": ["private"],
                        "format": ["camelCase"],
                        "leadingUnderscore": "require"
                    }
                ]
            }
          }
      ]
}